/*
 * This file is generated by jOOQ.
 */
package aftrolle.com.steam.store.analytics.gen.tables.records;


import aftrolle.com.steam.store.analytics.gen.tables.SteamTopSell;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SteamTopSellRecord extends UpdatableRecordImpl<SteamTopSellRecord> implements Record7<OffsetDateTime, Integer, Float, Integer[], Integer[], Integer[], Float> {

    private static final long serialVersionUID = 1648095945;

    /**
     * Setter for <code>public.steam_top_sell.timestamp</code>.
     */
    public void setTimestamp(OffsetDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(0);
    }

    /**
     * Setter for <code>public.steam_top_sell.position</code>.
     */
    public void setPosition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.steam_top_sell.prev_price</code>.
     */
    public void setPrevPrice(Float value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.prev_price</code>.
     */
    public Float getPrevPrice() {
        return (Float) get(2);
    }

    /**
     * Setter for <code>public.steam_top_sell.app_ids</code>.
     */
    public void setAppIds(Integer... value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.app_ids</code>.
     */
    public Integer[] getAppIds() {
        return (Integer[]) get(3);
    }

    /**
     * Setter for <code>public.steam_top_sell.package_ids</code>.
     */
    public void setPackageIds(Integer... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.package_ids</code>.
     */
    public Integer[] getPackageIds() {
        return (Integer[]) get(4);
    }

    /**
     * Setter for <code>public.steam_top_sell.bundle_ids</code>.
     */
    public void setBundleIds(Integer... value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.bundle_ids</code>.
     */
    public Integer[] getBundleIds() {
        return (Integer[]) get(5);
    }

    /**
     * Setter for <code>public.steam_top_sell.price</code>.
     */
    public void setPrice(Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.steam_top_sell.price</code>.
     */
    public Float getPrice() {
        return (Float) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, OffsetDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<OffsetDateTime, Integer, Float, Integer[], Integer[], Integer[], Float> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<OffsetDateTime, Integer, Float, Integer[], Integer[], Integer[], Float> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field1() {
        return SteamTopSell.STEAM_TOP_SELL.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SteamTopSell.STEAM_TOP_SELL.POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float> field3() {
        return SteamTopSell.STEAM_TOP_SELL.PREV_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field4() {
        return SteamTopSell.STEAM_TOP_SELL.APP_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field5() {
        return SteamTopSell.STEAM_TOP_SELL.PACKAGE_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field6() {
        return SteamTopSell.STEAM_TOP_SELL.BUNDLE_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float> field7() {
        return SteamTopSell.STEAM_TOP_SELL.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component1() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float component3() {
        return getPrevPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component4() {
        return getAppIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component5() {
        return getPackageIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component6() {
        return getBundleIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float component7() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value1() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float value3() {
        return getPrevPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value4() {
        return getAppIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value5() {
        return getPackageIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value6() {
        return getBundleIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float value7() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value1(OffsetDateTime value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value2(Integer value) {
        setPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value3(Float value) {
        setPrevPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value4(Integer... value) {
        setAppIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value5(Integer... value) {
        setPackageIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value6(Integer... value) {
        setBundleIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord value7(Float value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSellRecord values(OffsetDateTime value1, Integer value2, Float value3, Integer[] value4, Integer[] value5, Integer[] value6, Float value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SteamTopSellRecord
     */
    public SteamTopSellRecord() {
        super(SteamTopSell.STEAM_TOP_SELL);
    }

    /**
     * Create a detached, initialised SteamTopSellRecord
     */
    public SteamTopSellRecord(OffsetDateTime timestamp, Integer position, Float prevPrice, Integer[] appIds, Integer[] packageIds, Integer[] bundleIds, Float price) {
        super(SteamTopSell.STEAM_TOP_SELL);

        set(0, timestamp);
        set(1, position);
        set(2, prevPrice);
        set(3, appIds);
        set(4, packageIds);
        set(5, bundleIds);
        set(6, price);
    }
}
