/*
 * This file is generated by jOOQ.
 */
package aftrolle.com.steam.store.analytics.gen.tables;


import aftrolle.com.steam.store.analytics.gen.Keys;
import aftrolle.com.steam.store.analytics.gen.Public;
import aftrolle.com.steam.store.analytics.gen.tables.records.SteamTopSellRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SteamTopSell extends TableImpl<SteamTopSellRecord> {

    private static final long serialVersionUID = -1551885714;

    /**
     * The reference instance of <code>public.steam_top_sell</code>
     */
    public static final SteamTopSell STEAM_TOP_SELL = new SteamTopSell();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SteamTopSellRecord> getRecordType() {
        return SteamTopSellRecord.class;
    }

    /**
     * The column <code>public.steam_top_sell.timestamp</code>.
     */
    public final TableField<SteamTopSellRecord, OffsetDateTime> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.steam_top_sell.position</code>.
     */
    public final TableField<SteamTopSellRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.steam_top_sell.prev_price</code>.
     */
    public final TableField<SteamTopSellRecord, Float> PREV_PRICE = createField("prev_price", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>public.steam_top_sell.app_ids</code>.
     */
    public final TableField<SteamTopSellRecord, Integer[]> APP_IDS = createField("app_ids", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.steam_top_sell.package_ids</code>.
     */
    public final TableField<SteamTopSellRecord, Integer[]> PACKAGE_IDS = createField("package_ids", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.steam_top_sell.bundle_ids</code>.
     */
    public final TableField<SteamTopSellRecord, Integer[]> BUNDLE_IDS = createField("bundle_ids", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.steam_top_sell.price</code>.
     */
    public final TableField<SteamTopSellRecord, Float> PRICE = createField("price", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * Create a <code>public.steam_top_sell</code> table reference
     */
    public SteamTopSell() {
        this(DSL.name("steam_top_sell"), null);
    }

    /**
     * Create an aliased <code>public.steam_top_sell</code> table reference
     */
    public SteamTopSell(String alias) {
        this(DSL.name(alias), STEAM_TOP_SELL);
    }

    /**
     * Create an aliased <code>public.steam_top_sell</code> table reference
     */
    public SteamTopSell(Name alias) {
        this(alias, STEAM_TOP_SELL);
    }

    private SteamTopSell(Name alias, Table<SteamTopSellRecord> aliased) {
        this(alias, aliased, null);
    }

    private SteamTopSell(Name alias, Table<SteamTopSellRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SteamTopSell(Table<O> child, ForeignKey<O, SteamTopSellRecord> key) {
        super(child, key, STEAM_TOP_SELL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SteamTopSellRecord> getPrimaryKey() {
        return Keys.TOP_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SteamTopSellRecord>> getKeys() {
        return Arrays.<UniqueKey<SteamTopSellRecord>>asList(Keys.TOP_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSell as(String alias) {
        return new SteamTopSell(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SteamTopSell as(Name alias) {
        return new SteamTopSell(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SteamTopSell rename(String name) {
        return new SteamTopSell(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SteamTopSell rename(Name name) {
        return new SteamTopSell(name, null);
    }
}
